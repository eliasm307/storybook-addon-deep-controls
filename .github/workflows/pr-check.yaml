# see https://medium.com/@nickjabs/running-github-actions-in-parallel-and-sequentially-b338e4a46bf5
# see https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/troubleshooting-required-status-checks

name: pr-check

on:
  pull_request:
    branches: [main]
  merge_group:

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          cache: "yarn"

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --immutable --immutable-cache

      # see https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/caching-dependencies-to-speed-up-workflows
      # - name: Cache node_modules
      #   uses: actions/cache@v3
      #   id: cache-node-modules
      #   with:
      #     path: |
      #       node_modules
      #       packages/common/node_modules
      #       packages/addon/node_modules
      #       packages/example-v7/node_modules
      #       packages/example-v8/node_modules
      #     key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}

      # todo move this to separate job
      # see https://dev.to/ayomiku222/how-to-cache-playwright-browser-on-github-actions-51o6
      - name: Cache Playwright binaries
        uses: actions/cache@v3
        id: cache-playwright
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV

      # see https://playwright.dev/docs/ci-intro
      - name: Install Playwright Browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

  lint:
    # see https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#jobsjob_idneeds
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          cache: "yarn"

      - name: Install dependencies
        # if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --immutable --immutable-cache

      - name: Run lint
        run: npm run lint

  type-check:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          cache: "yarn"

      - name: Install dependencies
        # if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --immutable --immutable-cache

      - name: Run type check
        run: npm run check-types

  format-check:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          cache: "yarn"

      - name: Install dependencies
        # if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --immutable --immutable-cache

      - name: Run format check
        run: npm run format

  test-unit:
    needs: [install, lint, type-check, format-check]
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          cache: "yarn"

      - name: Install dependencies
        # if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --immutable --immutable-cache

      - name: Run addon unit tests
        run: npm run --prefix packages/addon test

  test-e2e-v7:
    needs: test-unit
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          cache: "yarn"

      - name: Install dependencies
        # if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --immutable --immutable-cache

      - name: Restore Playwright binaries from cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Run Storybook e2e tests
        run: npm run --prefix packages/example-v7 test

  test-e2e-v8:
    needs: test-unit
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          cache: "yarn"

      - name: Install dependencies
        # if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --immutable --immutable-cache

      - name: Restore Playwright binaries from cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Run Storybook e2e tests
        run: npm run --prefix packages/example-v8 test
